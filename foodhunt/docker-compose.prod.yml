version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: foodhunt-mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: foodhunt_canteen
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    networks:
      - foodhunt-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: foodhunt-backend
    restart: always
    environment:
      NODE_ENV: production
      PORT: 5002
      MONGODB_URI: mongodb://admin:${MONGO_ROOT_PASSWORD}@mongodb:27017/foodhunt_canteen?authSource=admin
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: 7d
      CLIENT_URL: https://${DOMAIN}
    depends_on:
      - mongodb
    ports:
      - "5002:5002"
    networks:
      - foodhunt-network

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: foodhunt-frontend
    restart: always
    environment:
      NEXT_PUBLIC_API_URL: https://${DOMAIN}/api
    depends_on:
      - backend
    ports:
      - "3000:3000"
    networks:
      - foodhunt-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: foodhunt-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - foodhunt-network

volumes:
  mongodb_data:

networks:
  foodhunt-network:
    driver: bridge
